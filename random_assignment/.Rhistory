scale_shape_manual(values = c(19, 4), "") +
scale_color_manual(values = c("black", "black"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
dev.off()
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_effect_experiment.pdf", type = "pdf", width = 8, height = 6, dpi = 300)
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(shape = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.7), size = 0.25, fill = "white") +
geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_shape_manual(values = c(19, 4), "") +
scale_color_manual(values = c("black", "black"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
dev.off()
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(shape = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.7), size = 0.25, fill = "white") +
#geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_shape_manual(values = c(19, 4), "") +
scale_color_manual(values = c("black", "black"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(fill = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.5), size = 0.25, shape = 21) +
geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_color_manual(values = c("black", "blue"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(color = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.5), size = 0.25) +
geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_color_manual(values = c("red", "blue"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_effect_experiment.pdf", type = "pdf", width = 8, height = 6, dpi = 300)
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(color = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.5), size = 0.25) +
geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_color_manual(values = c("red", "blue"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
dev.off()
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_effect_experiment.pdf", type = "pdf", width = 8, height = 6, dpi = 300)
ggplot(mode.eff.exp, aes(x = col, y = mean)) +
geom_pointrange(aes(color = group, ymin = lower.ci, ymax = upper.ci),
position = position_dodge(0.7), size = 0.25) +
geom_hline(aes(yintercept = mean.mean, color = group)) +
#geom_hline(aes(yintercept = mean.lower.ci, color = group), lty = 3) +
#geom_hline(aes(yintercept = mean.upper.ci, color = group), lty = 3) +
scale_color_manual(values = c("red", "blue"), "") +
facet_wrap(~mode.type, ncol = 3) +
ylab("Mean (95% CI)") + xlab("Variable") +
coord_flip() +
theme_bw() + theme(legend.position = c(0.85, 0.4))
dev.off()
# Different mode
data$different.mode <- ifelse(data$YIMODE == data$PIMODE, 0,
ifelse(data$PIMODE == -99, NA, 1))
# Age
# Continuous (with 0 being 18 years old) and age squared:
data$y_age <- ifelse(data$YQ1 > 0, data$YQ1 - 18, NA)
# Gender (male)
data$y_male <- 2 - data$YQ42
# Is parent mother or father?
data$p_is_father <- ifelse(data$time == "Father", 1, 0)
# Lives with parents
data$y_live_with_p <- 0
data$y_live_with_p[data$YQ28a_2 == 1 & data$YQ28a_3 == 1] <- 1
# Is a student as main activity
data$y_student_main <- ifelse(data$YQ14b == 4, 1,
ifelse(data$YQ14b < 0, NA, 0))
# Is unemployed (as main activity)
data$y_unemp <- ifelse(data$YQ14b == 3, 1,
ifelse(data$YQ14b < 0, NA, 0))
# Education
# Get the highest degree out of completed and targeted educational level
data$y_edu <- data$YQ18_II
data$y_edu[data$YQ18_I > data$YQ18_II] <- data$YQ18_I[data$YQ18_I > data$YQ18_II]
data[, c("YQ18_I", "YQ18_II", "y_edu")] <- data[, c("YQ18_I", "YQ18_II", "y_edu")] %>%
mutate_each(funs(ifelse(. < 0, NA, .)))
# Parent age (leave out for now)
data$p_age <- ifelse(data$PQ24 > 0, 2016 - data$PQ24, NA)
# Parent education (leave out for now)
data$p_edu <- ifelse(data$PQ26 < 0, NA, data$PQ26)
#------------------------------------------------------------------#
# ASSESS THE EFFECT OF THE "different.mode" DUMMY ON ALL VARIABLES #
#------------------------------------------------------------------#
rm(list = ls()[grep("res", ls())])
res.st.1a <- data.frame(NULL)
res.st.1b <- data.frame(NULL)
res.st.2a <- data.frame(NULL)
res.st.2b <- data.frame(NULL)
for (v in c(wv.dif, wa.dif)){
# Only AT, CH, CZ, DE, HU, IT, no controls, country dummies
mod <- lm(as.formula(paste0(v, " ~ different.mode + factor(cname)")),
data = subset(data, cname == "AT" | cname == "CH" | cname == "CZ" |
cname == "DE" | cname == "HU" | cname == "IT"))
res.st.1a <- rbind(res.st.1a, cbind(row.names(summary(mod)$coefficients),
round(summary(mod)$coefficients[, c(1, 2, 4)], 3),
v))
rm(mod)
# Only AT, CH, CZ, DE, HU, IT, with controls, country dummies
mod <- lm(as.formula(paste0(v, " ~ different.mode + y_age + y_male*p_is_father +
factor(y_edu) +
y_live_with_p + y_student_main + y_unemp +
factor(cname)")),
data = subset(data, cname == "AT" | cname == "CH" | cname == "CZ" |
cname == "DE" | cname == "HU" | cname == "IT"))
res.st.1b <- rbind(res.st.1b, cbind(row.names(summary(mod)$coefficients),
round(summary(mod)$coefficients[, c(1, 2, 4)], 3),
v))
rm(mod)
# All countries, no country dummies, no controls + save residuals
mod <- lm(as.formula(paste0(v, " ~ different.mode")),
data = data)
res.st.2a <- rbind(res.st.2a, cbind(row.names(summary(mod)$coefficients),
round(summary(mod)$coefficients[, c(1, 2, 4)], 3),
v))
data[which(!is.na(data[, v])), paste0(v, "_r")] <- mod$residuals
rm(mod)
# All countries, no country dummies, with controls
mod <- lm(as.formula(paste0(v, " ~ different.mode + y_age + y_male*p_is_father +
factor(y_edu) +
y_live_with_p + y_student_main + y_unemp")),
data = data)
res.st.2b <- rbind(res.st.2b, cbind(row.names(summary(mod)$coefficients),
round(summary(mod)$coefficients[, c(1, 2, 4)], 3),
v))
rm(mod)
}
names(res.st.1a) <- c("coef.n", "coef", "se", "p", "dv")
names(res.st.1b) <- c("coef.n", "coef", "se", "p", "dv")
names(res.st.2a) <- c("coef.n", "coef", "se", "p", "dv")
names(res.st.2b) <- c("coef.n", "coef", "se", "p", "dv")
### PLOT THE EFFECT OF THE "different.mode" DUMMY ACROSS SPECIFICATIONS
# Only in AT, CH, CZ, DE, HU, IT - Without controls
res.dm.1a <- res.st.1a[grep("different.mode", as.character(res.st.1a$coef.n)), c("coef", "se", "dv")]
res.dm.1a$dv <- gsub("wv_dif", "PQ18/YQ21", as.character(res.dm.1a$dv))
res.dm.1a$dv <- gsub("wa_dif", "PQ19/YQ22", as.character(res.dm.1a$dv))
res.dm.1a$coef <- as.numeric(as.character(res.dm.1a$coef))
res.dm.1a$se <- as.numeric(as.character(res.dm.1a$se))
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_nocontrols.jpg", type = "jpg",
width = 7, height = 5, dpi = 500)
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw() +
theme(axis.text.x = element_text(family = "Times New Roman"),
axis.text.y = element_text(family = "Times New Roman"),
axis.title.x = element_text(family = "Times New Roman"),
axis.title.y = element_text(family = "Times New Roman"),
legend.text = element_text(family = "Times New Roman"),
legend.title = element_text(family = "Times New Roman"))
dev.off()
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw() #+
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_nocontrols.jpg", type = "jpg",
width = 7, height = 5, dpi = 500)
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw() #+
# theme(axis.text.x = element_text(family = "Times New Roman"),
#       axis.text.y = element_text(family = "Times New Roman"),
#       axis.title.x = element_text(family = "Times New Roman"),
#       axis.title.y = element_text(family = "Times New Roman"),
#       legend.text = element_text(family = "Times New Roman"),
#       legend.title = element_text(family = "Times New Roman"))
dev.off()
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_nocontrols.jpg", type = "jpg",
width = 7, height = 5, dpi = 500)
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw() +
theme(axis.text.x = element_text(family = "Times New Roman"),
axis.text.y = element_text(family = "Times New Roman"),
axis.title.x = element_text(family = "Times New Roman"),
axis.title.y = element_text(family = "Times New Roman"),
legend.text = element_text(family = "Times New Roman"),
legend.title = element_text(family = "Times New Roman"))
dev.off()
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_nocontrols.jpg", type = "jpg",
width = 5, height = 5, dpi = 500)
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw() +
theme(axis.text.x = element_text(family = "Times New Roman"),
axis.text.y = element_text(family = "Times New Roman"),
axis.title.x = element_text(family = "Times New Roman"),
axis.title.y = element_text(family = "Times New Roman"),
legend.text = element_text(family = "Times New Roman"),
legend.title = element_text(family = "Times New Roman"))
dev.off()
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_nocontrols.pdf", type = "pdf",
width = 7, height = 5)
ggplot(res.dm.1a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
ylab("Effect of Different Survey Mode (95% confidence interval)") +
xlab("Item") +
theme_bw()
dev.off()
res.dm.1b <- res.st.1b[grep("different.mode", as.character(res.st.1b$coef.n)), c("coef", "se", "dv")]
res.dm.1b$dv <- gsub("wv_dif", "PQ18/YQ21", as.character(res.dm.1b$dv))
res.dm.1b$dv <- gsub("wa_dif", "PQ19/YQ22", as.character(res.dm.1b$dv))
res.dm.1b$coef <- as.numeric(as.character(res.dm.1b$coef))
res.dm.1b$se <- as.numeric(as.character(res.dm.1b$se))
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s1_controls.pdf", type = "pdf",
width = 7, height = 5, dpi = 300)
ggplot(res.dm.1b, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
#ylab("Effect of Different Survey Mode,\nonly AT, CH, CZ, DE, HU, IT\n(controlling for country dummies + socio-demographics)") +
#xlab("Difference Parent-Child") +
ylab("Effect of Different Survey Mode (95%)") + xlab("Item") +
theme_bw()
dev.off()
res.dm.2a <- res.st.2a[grep("different.mode", as.character(res.st.2a$coef.n)), c("coef", "se", "dv")]
res.dm.2a$dv <- gsub("wv_dif", "PQ18/YQ21", as.character(res.dm.2a$dv))
res.dm.2a$dv <- gsub("wa_dif", "PQ19/YQ22", as.character(res.dm.2a$dv))
res.dm.2a$coef <- as.numeric(as.character(res.dm.2a$coef))
res.dm.2a$se <- as.numeric(as.character(res.dm.2a$se))
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s2_nocontrols.pdf", type = "pdf",
width = 7, height = 5, dpi = 300)
ggplot(res.dm.2a, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
# ylab("Effect of Different Survey Mode, all countries,\n(NOT controlling for country dummies)") +
# xlab("Difference Parent-Child") +
ylab("Effect of Different Survey Mode (95%)") + xlab("Item") +
theme_bw()
dev.off()
# All countries - With controls
res.dm.2b <- res.st.2b[grep("different.mode", as.character(res.st.2b$coef.n)), c("coef", "se", "dv")]
res.dm.2b$dv <- gsub("wv_dif", "PQ18/YQ21", as.character(res.dm.2b$dv))
res.dm.2b$dv <- gsub("wa_dif", "PQ19/YQ22", as.character(res.dm.2b$dv))
res.dm.2b$coef <- as.numeric(as.character(res.dm.2b$coef))
res.dm.2b$se <- as.numeric(as.character(res.dm.2b$se))
quartz(file = "~/Dropbox/CUPESSE_quali_book/figures/mode_eff/mode_s2_controls.pdf", type = "pdf",
width = 7, height = 5, dpi = 300)
ggplot(res.dm.2b, aes(x = dv, y = coef)) +
geom_hline(aes(yintercept = 0), lty = 2) +
geom_pointrange(aes(ymin = coef - 1.96*se, ymax = coef + 1.96*se)) +
coord_flip() +
# ylab("Effect of Different Survey Mode, all countries,\n(controlling f socio-demographics, NOT country dummies)") +
# xlab("Difference Parent-Child") +
ylab("Effect of Different Survey Mode (95%)") + xlab("Item") +
theme_bw()
dev.off()
rbinom(10, 1)
rbinom(10, 1, c = (0.3, 0.7))
rbinom(10, 1, c(0.3, 0.7))
10
?rbinom
rbinom(20, 1, c(0.3, 0.7))
gr <- rbinom(20, 1, c(0.3, 0.7))
sample(gr, 10)
mean(gr)
mean(sample(gr, 10))
install.packages('rsconnect')
rsconnect::setAccountInfo(name='federicovegetti', token='BFF81C24FE8AF3D165316044115C8553', secret='YxpoLyoXIQYC/rnY5dnAk0dW+xOHrTj41s3wnIAC')
library(shiny)
install.packages("shiny")
library(shiny)
setwd("/Users/fede/GitHub")
runApp()
setwd("/Users/fede/GitHub/")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
install.packages("rhandsontable")
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
?numericInput
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
data.frame(x=data())
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
?split
d <- 1:10
split(d, ceiling(seq_along(d)/20))
split(d, ceiling(seq_along(d)/5))
ceiling(seq_along(d)/5)
?ceiling
seq_along(d)
?seq_along
length(d)
length(d)/2
split(d, ceiling(seq_along(d)/(length(d)/2)))
split(d, ceiling(seq_along(d)/(length(d)/3)))
groups <- split(d, ceiling(seq_along(d)/(length(d)/3)))
groups$`1`
groups <- split(d, ceiling(seq_along(d)/(length(d)/3)))
seq_along(d)
x = data.frame(num = 1:26, let = letters, LET = LETTERS)
x
set.seed(10)
1:2
split(x, sample(rep(1:2, 13)))
n <- 2
x = data.frame(num = 1:26, let = letters, LET = LETTERS)
set.seed(10)
split(x, sample(rep(1:n, 13)))
sample(rep(1:n, 13))
n <- 3
sample(rep(1:n, 13))
x = data.frame(num = 1:26, let = letters, LET = LETTERS)
x
n <- 2
dfchunk <- split(x, factor(sort(rank(row.names(x))%%n)))
dfchunk
factor(sort(rank(row.names(x))%%n))
row.names(x)
rank(row.names(x))
rank(row.names(x))%%n
?subset
n <- 3
1:n
sample(1:n, n)
n
sample(1:n, 1)
df <- data.frame(num = 1:26, let = letters, LET = LETTERS)
rep(sample(1:n, 1), ncol(df))
rep(sample(1:n, 1), nrow(df))
1:n
sample(1:n, 1)
sample(1:n, nrow(df))
nrow(df)
?sample
sample(1:n, nrow(df), replace = T)
factor(sort(rank(row.names(x))%%n))
dfchunk <- split(x, sample(1:n, nrow(df), replace = T))
dfchunk
split(x, sample(1:n, nrow(df), replace = T))
x
split(df, sample(1:n, nrow(df), replace = T))
sample(1:n, nrow(df), replace = T)
split(df, sample(1:n, nrow(df), replace = T))
dfchunk
sample <- round(rnorm(n1, m1, sd1))
sample <- round(rnorm(20, 100, 10))
df <- data.frame(Value=sample)
df
dfchunk <- split(df$Value, sample(1:ng, length(df$Value), replace = T))
ng <- 2
dfchunk <- split(df$Value, sample(1:ng, length(df$Value), replace = T))
dfchunk
df$Value
sample <- round(rnorm(20, 100, 10))
sample
df <- data.frame(Value=sample)
dfchunk <- split(df$Value, sample(1:ng, length(df$Value), replace = T))
dfchunk
lapply(dfchunk, mean)
sapply(dfchunk, mean)
?sapply
sapply(dfchunk, length)
cbind(sapply(dfchunk, length), sapply(dfchunk, mean))
res <- data.frame(cbind(sapply(dfchunk, length), sapply(dfchunk, mean)))
res
row.names(res) <-
paste0("Group ", seq(1:ng))
res
res <- data.frame(cbind(sapply(dfchunk, length), sapply(dfchunk, mean)))
row.names(res) <- paste0("Group ", seq(1:ng))
col.names(res) <- c("N", "Mean")
names(res) <- c("N", "Mean")
res
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
?reactiveValues
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
reactiveValues(df$Value)
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
?reactive
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
?selectInput
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
rm(df)
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
setwd("/Users/fede/GitHub/shinyapps/sampling_norm")
runApp()
res
print(res)
?print
runApp()
